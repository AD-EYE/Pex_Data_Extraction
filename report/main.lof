\select@language {english}
\select@language {english}
\contentsline {figure}{\numberline {1}{\ignorespaces UML class diagram of road data in PreScan's configuration file. The bulk of the information defining the roads are in the algorithms used to generate them from these values. These algorithms are not accessible through the PreScan API.\relax }}{5}{figure.caption.6}
\contentsline {figure}{\numberline {2}{\ignorespaces UML class diagram of road data in the vector map format. Drivable lanes and other road features are defined as a sequence of linked coordinates. Each object in the above UML class diagram is represented as a single line in its corresponding CSV file.\relax }}{6}{figure.caption.7}
\contentsline {figure}{\numberline {3}{\ignorespaces Sample of the HTML documentation generated automatically from comment strings in the Python code using \textit {Sphinx}. This class uses the abstract factory design pattern: objects are created using the same generic interface regardless of their exact type. This class also implements the iterator design pattern, but that code is implemented with private override functions, so it does not appear in the HTML docs.\relax }}{7}{figure.caption.8}
\contentsline {figure}{\numberline {4}{\ignorespaces Comparison of two methods for approximating parallel Bezier curves. In black: the progenitor curve with its defining control points shown as circles connected by dashed lines. In red: approximation using the Tiller-Hanson method, with the associated control points shown as circles. In blue: approximation using a purely numerical method. This method was chosen for the vector map software.\relax }}{8}{figure.caption.9}
